buildscript {
    repositories {
        mavenCentral() { metadataSources { mavenPom(); ignoreGradleMetadataRedirection() } }
        gradlePluginPortal() { metadataSources { mavenPom(); ignoreGradleMetadataRedirection() } }
    }

    dependencies {
        classpath 'com.palantir.jakartapackagealignment:jakarta-package-alignment:0.5.0'
        classpath 'com.palantir.gradle.jdks:gradle-jdks:0.31.0'
        classpath 'com.palantir.gradle.jdkslatest:gradle-jdks-latest:0.7.0'
        classpath 'com.palantir.gradle.externalpublish:gradle-external-publish-plugin:1.12.0'
        classpath 'com.palantir.javaformat:gradle-palantir-java-format:2.28.0'
        classpath 'com.palantir.gradle.revapi:gradle-revapi:1.7.0'
        classpath 'com.palantir.baseline:gradle-baseline-java:5.1.0'
        classpath 'com.palantir.gradle.consistentversions:gradle-consistent-versions:2.11.0'
        classpath 'me.champeau.jmh:jmh-gradle-plugin:0.6.6'
    }
}

plugins {
 id 'com.palantir.git-version' version '0.15.0'
 id 'org.inferred.processors' version '3.6.0'
}

apply plugin: 'com.palantir.external-publish'
apply plugin: 'com.palantir.baseline'
apply plugin: 'com.palantir.consistent-versions'
apply plugin: 'com.palantir.baseline-java-versions'
apply plugin: 'com.palantir.jdks.latest'

javaVersions {
    libraryTarget = 11
    runtime = 17
}

allprojects {
    apply plugin: 'com.palantir.java-format'
    apply plugin: 'com.palantir.jakarta-package-alignment'
    repositories {
        mavenCentral() { metadataSources { mavenPom(); ignoreGradleMetadataRedirection() } }
    }

    group 'com.palantir.conjure.java.api'
    version gitVersion()
}

subprojects {
    apply plugin: 'java-library'
    apply plugin: 'com.palantir.baseline-class-uniqueness'

    tasks.check.dependsOn(javadoc)

    test {
        minHeapSize = "512m"
        maxHeapSize = "512m"
    }
}
